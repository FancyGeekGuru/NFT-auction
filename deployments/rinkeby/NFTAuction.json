{
  "address": "0xe03A1174d3cabebf4D7F3e53d83D64cE9295B13e",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionEndPeriod",
          "type": "uint256"
        }
      ],
      "name": "AuctionPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "auctionSettler",
          "type": "address"
        }
      ],
      "name": "AuctionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "masterTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "batchTokens",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyNowPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "whitelistedBuyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "feeRecipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint32[]",
          "name": "feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "BatchSaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "BidMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        }
      ],
      "name": "BidWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBuyNowPrice",
          "type": "uint256"
        }
      ],
      "name": "BuyNowPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "HighestBidTaken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinPrice",
          "type": "uint256"
        }
      ],
      "name": "MinimumPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftHighestBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftHighestBidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftRecipient",
          "type": "address"
        }
      ],
      "name": "NFTTransferredAndSellerPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        }
      ],
      "name": "NFTWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyNowPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionBidPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidIncreasePercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "feeRecipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint32[]",
          "name": "feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "NftAuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "masterTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "batchTokens",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyNowPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionBidPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidIncreasePercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "feeRecipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint32[]",
          "name": "feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "NftBatchAuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyNowPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "whitelistedBuyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "feeRecipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint32[]",
          "name": "feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "SaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newWhitelistedBuyer",
          "type": "address"
        }
      ],
      "name": "WhitelistedBuyerUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_batchTokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buyNowPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionBidPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bidIncreasePercentage",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "createBatchNftAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_batchTokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_buyNowPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_whitelistedBuyer",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "createBatchSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_batchTokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buyNowPrice",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "createDefaultBatchNftAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buyNowPrice",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "createDefaultNftAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buyNowPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionBidPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bidIncreasePercentage",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "createNewNftAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_buyNowPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_whitelistedBuyer",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_feeRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_feePercentages",
          "type": "uint32[]"
        }
      ],
      "name": "createSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAuctionBidPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultBidIncreasePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "makeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_nftRecipient",
          "type": "address"
        }
      ],
      "name": "makeCustomBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumMinPricePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumSettableIncreasePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftContractAuctions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyNowPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionBidPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftHighestBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidIncreasePercentage",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "nftHighestBidder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftSeller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "whitelistedBuyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ERC20Token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOfNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "settleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "takeHighestBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newBuyNowPrice",
          "type": "uint256"
        }
      ],
      "name": "updateBuyNowPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newMinPrice",
          "type": "uint256"
        }
      ],
      "name": "updateMinimumPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newWhitelistedBuyer",
          "type": "address"
        }
      ],
      "name": "updateWhitelistedBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAllFailedCredits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x74492689365130d322fdfaf26bbc851094f0a6cef4240aeafccf3bce61ff417b",
  "receipt": {
    "to": null,
    "from": "0x6a00a9b7C73786E4BF89D5898a80Ce36a4fb26Dc",
    "contractAddress": "0xe03A1174d3cabebf4D7F3e53d83D64cE9295B13e",
    "transactionIndex": 22,
    "gasUsed": "3455293",
    "logsBloom": "0x
    "blockHash": "0xbc4aac8162a3566ae4de23022c41acaa516b4a929e1cf4dc72fdcfb4be2d5a81",
    "transactionHash": "0x74492689365130d322fdfaf26bbc851094f0a6cef4240aeafccf3bce61ff417b",
    "logs": [],
    "blockNumber": 9228536,
    "cumulativeGasUsed": "5478317",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "45acfcbcb07c5b8d61823fd2c35cab21",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndPeriod\",\"type\":\"uint256\"}],\"name\":\"AuctionPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auctionSettler\",\"type\":\"address\"}],\"name\":\"AuctionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"masterTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"batchTokens\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyNowPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"whitelistedBuyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"BatchSaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"BidMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"}],\"name\":\"BidWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyNowPrice\",\"type\":\"uint256\"}],\"name\":\"BuyNowPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"HighestBidTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinPrice\",\"type\":\"uint256\"}],\"name\":\"MinimumPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftHighestBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftHighestBidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftRecipient\",\"type\":\"address\"}],\"name\":\"NFTTransferredAndSellerPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"}],\"name\":\"NFTWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyNowPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionBidPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidIncreasePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"NftAuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"masterTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"batchTokens\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyNowPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionBidPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidIncreasePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"NftBatchAuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyNowPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"whitelistedBuyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"SaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newWhitelistedBuyer\",\"type\":\"address\"}],\"name\":\"WhitelistedBuyerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_batchTokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyNowPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionBidPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIncreasePercentage\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"createBatchNftAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_batchTokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_buyNowPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_whitelistedBuyer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"createBatchSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_batchTokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyNowPrice\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"createDefaultBatchNftAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyNowPrice\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"createDefaultNftAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyNowPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionBidPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIncreasePercentage\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"createNewNftAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_buyNowPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_whitelistedBuyer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_feeRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_feePercentages\",\"type\":\"uint32[]\"}],\"name\":\"createSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAuctionBidPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBidIncreasePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"makeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftRecipient\",\"type\":\"address\"}],\"name\":\"makeCustomBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumMinPricePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumSettableIncreasePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftContractAuctions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyNowPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionBidPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftHighestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidIncreasePercentage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftHighestBidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftSeller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"whitelistedBuyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ERC20Token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOfNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeHighestBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newBuyNowPrice\",\"type\":\"uint256\"}],\"name\":\"updateBuyNowPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMinPrice\",\"type\":\"uint256\"}],\"name\":\"updateMinimumPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newWhitelistedBuyer\",\"type\":\"address\"}],\"name\":\"updateWhitelistedBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllFailedCredits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Avo Labs GmbH\",\"kind\":\"dev\",\"methods\":{},\"title\":\"An Auction Contract for bidding and selling single and batched NFTs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createDefaultNftAuction(address,uint256,address,uint256,uint256,address[],uint32[])\":{\"notice\":\"Create an auction that uses the default bid increase percentage & the default auction bid period.\"}},\"notice\":\"This contract can be used for auctioning any NFTs, and accepts any ERC20 token as payment\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTAuction.sol\":\"NFTAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/NFTAuction.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity 0.8.4;\\n\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @title An Auction Contract for bidding and selling single and batched NFTs\\n/// @author Avo Labs GmbH\\n/// @notice This contract can be used for auctioning any NFTs, and accepts any ERC20 token as payment\\ncontract NFTAuction {\\n    mapping(address => mapping(uint256 => Auction)) public nftContractAuctions;\\n    mapping(address => mapping(uint256 => address)) public nftOwner;\\n    mapping(address => uint256) failedTransferCredits;\\n    //Each Auction is unique to each NFT (contract + id pairing).\\n    struct Auction {\\n        //map token ID to\\n        uint256 minPrice;\\n        uint256 buyNowPrice;\\n        uint256 auctionBidPeriod; //Increments the length of time the auction is open in which a new bid can be made after each bid.\\n        uint256 auctionEnd;\\n        uint256 nftHighestBid;\\n        uint256 bidIncreasePercentage;\\n        uint256[] batchTokenIds; // The first token in the batch is used to identify the auction (contract + id pairing).\\n        uint32[] feePercentages;\\n        address nftHighestBidder;\\n        address nftSeller;\\n        address whitelistedBuyer; //The seller can specify a whitelisted address for a sale (this is effectively a direct sale).\\n        address nftRecipient; //The bidder can specify a recipient for the NFT if their bid is successful.\\n        address ERC20Token; // The seller can specify an ERC20 token that can be used to bid or purchase the NFT.\\n        address[] feeRecipients;\\n    }\\n    /*\\n     * Default values that are used if not specified by the NFT seller.\\n     */\\n    uint256 public defaultBidIncreasePercentage;\\n    uint256 public defaultAuctionBidPeriod;\\n    uint256 public minimumSettableIncreasePercentage;\\n    uint256 public maximumMinPricePercentage;\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551           EVENTS            \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    event NftAuctionCreated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address nftSeller,\\n        address erc20Token,\\n        uint256 minPrice,\\n        uint256 buyNowPrice,\\n        uint256 auctionBidPeriod,\\n        uint256 bidIncreasePercentage,\\n        address[] feeRecipients,\\n        uint32[] feePercentages\\n    );\\n\\n    event NftBatchAuctionCreated(\\n        address nftContractAddress,\\n        uint256 masterTokenId,\\n        uint256[] batchTokens,\\n        address nftSeller,\\n        address erc20Token,\\n        uint256 minPrice,\\n        uint256 buyNowPrice,\\n        uint256 auctionBidPeriod,\\n        uint256 bidIncreasePercentage,\\n        address[] feeRecipients,\\n        uint32[] feePercentages\\n    );\\n\\n    event SaleCreated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address nftSeller,\\n        address erc20Token,\\n        uint256 buyNowPrice,\\n        address whitelistedBuyer,\\n        address[] feeRecipients,\\n        uint32[] feePercentages\\n    );\\n\\n    event BatchSaleCreated(\\n        address nftContractAddress,\\n        uint256 masterTokenId,\\n        uint256[] batchTokens,\\n        address nftSeller,\\n        address erc20Token,\\n        uint256 buyNowPrice,\\n        address whitelistedBuyer,\\n        address[] feeRecipients,\\n        uint32[] feePercentages\\n    );\\n\\n    event BidMade(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address bidder,\\n        uint256 ethAmount,\\n        address erc20Token,\\n        uint256 tokenAmount\\n    );\\n\\n    event AuctionPeriodUpdated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        uint256 auctionEndPeriod\\n    );\\n\\n    event NFTTransferredAndSellerPaid(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address nftSeller,\\n        uint256 nftHighestBid,\\n        address nftHighestBidder,\\n        address nftRecipient\\n    );\\n\\n    event AuctionSettled(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address auctionSettler\\n    );\\n\\n    event NFTWithdrawn(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address nftSeller\\n    );\\n\\n    event BidWithdrawn(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address highestBidder\\n    );\\n\\n    event WhitelistedBuyerUpdated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        address newWhitelistedBuyer\\n    );\\n\\n    event MinimumPriceUpdated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        uint256 newMinPrice\\n    );\\n\\n    event BuyNowPriceUpdated(\\n        address nftContractAddress,\\n        uint256 tokenId,\\n        uint256 newBuyNowPrice\\n    );\\n    event HighestBidTaken(address nftContractAddress, uint256 tokenId);\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END             \\u2551\\n      \\u2551            EVENTS           \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551          MODIFIERS          \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    modifier auctionOngoing(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            _isAuctionOngoing(_nftContractAddress, _tokenId),\\n            \\\"Auction has ended\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier priceGreaterThanZero(uint256 _price) {\\n        require(_price > 0, \\\"Price cannot be 0\\\");\\n        _;\\n    }\\n    /*\\n     * The minimum price must be 80% of the buyNowPrice(if set).\\n     */\\n    modifier minPriceDoesNotExceedLimit(\\n        uint256 _buyNowPrice,\\n        uint256 _minPrice\\n    ) {\\n        require(\\n            _buyNowPrice == 0 ||\\n                _getPortionOfBid(_buyNowPrice, maximumMinPricePercentage) >=\\n                _minPrice,\\n            \\\"Min price cannot exceed 80% of buyNowPrice\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier notNftSeller(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            msg.sender !=\\n                nftContractAuctions[_nftContractAddress][_tokenId].nftSeller,\\n            \\\"Owner cannot bid on own NFT\\\"\\n        );\\n        _;\\n    }\\n    modifier onlyNftSeller(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            msg.sender ==\\n                nftContractAuctions[_nftContractAddress][_tokenId].nftSeller,\\n            \\\"Only the owner can call this function\\\"\\n        );\\n        _;\\n    }\\n    /*\\n     * The bid amount was either equal the buyNowPrice or it must be higher than the previous\\n     * bid by the specified bid increase percentage.\\n     */\\n    modifier bidAmountMeetsBidRequirements(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _tokenAmount\\n    ) {\\n        require(\\n            _doesBidMeetBidRequirements(\\n                _nftContractAddress,\\n                _tokenId,\\n                _tokenAmount\\n            ),\\n            \\\"Not enough funds to bid on NFT\\\"\\n        );\\n        _;\\n    }\\n    // check if the highest bidder can purchase this NFT.\\n    modifier onlyApplicableBuyer(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) {\\n        require(\\n            !_isWhitelistedSale(_nftContractAddress, _tokenId) ||\\n                nftContractAuctions[_nftContractAddress][_tokenId]\\n                    .whitelistedBuyer ==\\n                msg.sender,\\n            \\\"only the whitelisted buyer can bid on this NFT\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier minimumBidNotMade(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            !_isMinimumBidMade(_nftContractAddress, _tokenId),\\n            \\\"The auction has a valid bid made\\\"\\n        );\\n        _;\\n    }\\n    /*\\n     * NFTs in a batch must contain between 2 and 100 NFTs\\n     */\\n    modifier batchWithinLimits(uint256 _batchTokenIdsLength) {\\n        require(\\n            _batchTokenIdsLength > 1 && _batchTokenIdsLength <= 100,\\n            \\\"Number of NFTs not applicable for batch sale/auction\\\"\\n        );\\n        _;\\n    }\\n    /*\\n     * Payment is accepted if the payment is made in the ERC20 token or ETH specified by the seller.\\n     * Early bids on NFTs not yet up for auction must be made in ETH.\\n     */\\n    modifier paymentAccepted(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _tokenAmount\\n    ) {\\n        require(\\n            _isPaymentAccepted(\\n                _nftContractAddress,\\n                _tokenId,\\n                _erc20Token,\\n                _tokenAmount\\n            ),\\n            \\\"Bid to be made in quantities of specified token or eth\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isAuctionOver(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            !_isAuctionOngoing(_nftContractAddress, _tokenId),\\n            \\\"Auction is not yet over\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier notZeroAddress(address _address) {\\n        require(_address != address(0), \\\"cannot specify 0 address\\\");\\n        _;\\n    }\\n\\n    modifier increasePercentageAboveMinimum(uint256 _bidIncreasePercentage) {\\n        require(\\n            _bidIncreasePercentage >= minimumSettableIncreasePercentage,\\n            \\\"Bid increase percentage must be greater than minimum settable increase percentage\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isFeePercentagesLessThanMaximum(uint32[] memory _feePercentages) {\\n        uint32 totalPercent;\\n        for (uint256 i = 0; i < _feePercentages.length; i++) {\\n            totalPercent = totalPercent + _feePercentages[i];\\n        }\\n        require(totalPercent <= 10000, \\\"fee percentages exceed maximum\\\");\\n        _;\\n    }\\n\\n    modifier correctFeeRecipientsAndPercentages(\\n        uint256 _recipientsLength,\\n        uint256 _percentagesLength\\n    ) {\\n        require(\\n            _recipientsLength == _percentagesLength,\\n            \\\"mismatched fee recipients and percentages\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier isNotASale(address _nftContractAddress, uint256 _tokenId) {\\n        require(\\n            !_isASale(_nftContractAddress, _tokenId),\\n            \\\"Not applicable for a sale\\\"\\n        );\\n        _;\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END             \\u2551\\n      \\u2551          MODIFIERS          \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n    // constructor\\n    constructor() {\\n        defaultBidIncreasePercentage = 1000;\\n        defaultAuctionBidPeriod = 86400; //1 day\\n        minimumSettableIncreasePercentage = 500;\\n        maximumMinPricePercentage = 8000;\\n    }\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551    AUCTION CHECK FUNCTIONS   \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    function _isAuctionOngoing(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        uint256 auctionEndTimestamp = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].auctionEnd;\\n        //if the auctionEnd is set to 0, the auction is technically on-going, however\\n        //the minimum bid price (minPrice) has not yet been met.\\n        return (auctionEndTimestamp == 0 ||\\n            block.timestamp < auctionEndTimestamp);\\n    }\\n\\n    /*\\n     * Check if a bid has been made. This is applicable in the early bid scenario\\n     * to ensure that if an auction is created after an early bid, the auction\\n     * begins appropriately or is settled if the buy now price is met.\\n     */\\n    function _isABidMade(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return (nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftHighestBid > 0);\\n    }\\n\\n    /*\\n     *if the minPrice is set by the seller, check that the highest bid meets or exceeds that price.\\n     */\\n    function _isMinimumBidMade(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        uint256 minPrice = nftContractAuctions[_nftContractAddress][_tokenId]\\n            .minPrice;\\n        return\\n            minPrice > 0 &&\\n            (nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid >=\\n                minPrice);\\n    }\\n\\n    /*\\n     * If the buy now price is set by the seller, check that the highest bid meets that price.\\n     */\\n    function _isBuyNowPriceMet(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        uint256 buyNowPrice = nftContractAuctions[_nftContractAddress][_tokenId]\\n            .buyNowPrice;\\n        return\\n            buyNowPrice > 0 &&\\n            nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid >=\\n            buyNowPrice;\\n    }\\n\\n    /*\\n     * Check that a bid is applicable for the purchase of the NFT.\\n     * In the case of a sale: the bid needs to meet the buyNowPrice.\\n     * In the case of an auction: the bid needs to be a % higher than the previous bid.\\n     */\\n    function _doesBidMeetBidRequirements(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _tokenAmount\\n    ) internal view returns (bool) {\\n        uint256 buyNowPrice = nftContractAuctions[_nftContractAddress][_tokenId]\\n            .buyNowPrice;\\n        //if buyNowPrice is met, ignore increase percentage\\n        if (\\n            buyNowPrice > 0 &&\\n            (msg.value >= buyNowPrice || _tokenAmount >= buyNowPrice)\\n        ) {\\n            return true;\\n        }\\n        //if the NFT is up for auction, the bid needs to be a % higher than the previous bid\\n        uint256 bidIncreaseAmount = (nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBid *\\n            (10000 +\\n                _getBidIncreasePercentage(_nftContractAddress, _tokenId))) /\\n            10000;\\n        return (msg.value >= bidIncreaseAmount ||\\n            _tokenAmount >= bidIncreaseAmount);\\n    }\\n\\n    /*\\n     * An NFT is up for sale if the buyNowPrice is set, but the minPrice is not set.\\n     * Therefore the only way to conclude the NFT sale is to meet the buyNowPrice.\\n     */\\n    function _isASale(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return (nftContractAuctions[_nftContractAddress][_tokenId].buyNowPrice >\\n            0 &&\\n            nftContractAuctions[_nftContractAddress][_tokenId].minPrice == 0);\\n    }\\n\\n    function _isWhitelistedSale(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return (nftContractAuctions[_nftContractAddress][_tokenId]\\n            .whitelistedBuyer != address(0));\\n    }\\n\\n    /*\\n     * The highest bidder is allowed to purchase the NFT if\\n     * no whitelisted buyer is set by the NFT seller.\\n     * Otherwise, the highest bidder must equal the whitelisted buyer.\\n     */\\n    function _isHighestBidderAllowedToPurchaseNFT(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal view returns (bool) {\\n        return\\n            (!_isWhitelistedSale(_nftContractAddress, _tokenId)) ||\\n            _isHighestBidderWhitelisted(_nftContractAddress, _tokenId);\\n    }\\n\\n    function _isHighestBidderWhitelisted(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal view returns (bool) {\\n        return (nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftHighestBidder ==\\n            nftContractAuctions[_nftContractAddress][_tokenId]\\n                .whitelistedBuyer);\\n    }\\n\\n    /**\\n     * Payment is accepted in the following scenarios:\\n     * (1) Auction already created - can accept ETH or Specified Token\\n     *  --------> Cannot bid with ETH & an ERC20 Token together in any circumstance<------\\n     * (2) Auction not created - only ETH accepted (cannot early bid with an ERC20 Token\\n     * (3) Cannot make a zero bid (no ETH or Token amount)\\n     */\\n    function _isPaymentAccepted(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _bidERC20Token,\\n        uint256 _tokenAmount\\n    ) internal view returns (bool) {\\n        address auctionERC20Token = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].ERC20Token;\\n        if (_isERC20Auction(auctionERC20Token)) {\\n            return\\n                msg.value == 0 &&\\n                auctionERC20Token == _bidERC20Token &&\\n                _tokenAmount > 0;\\n        } else {\\n            return\\n                msg.value != 0 &&\\n                _bidERC20Token == address(0) &&\\n                _tokenAmount == 0;\\n        }\\n    }\\n\\n    function _isERC20Auction(address _auctionERC20Token)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        return _auctionERC20Token != address(0);\\n    }\\n\\n    /*\\n     * Returns the percentage of the total bid (used to calculate fee payments)\\n     */\\n    function _getPortionOfBid(uint256 _totalBid, uint256 _percentage)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        return (_totalBid * (_percentage)) / 10000;\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551    AUCTION CHECK FUNCTIONS   \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551    DEFAULT GETTER FUNCTIONS  \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /*****************************************************************\\n     * These functions check if the applicable auction parameter has *\\n     * been set by the NFT seller. If not, return the default value. *\\n     *****************************************************************/\\n\\n    function _getBidIncreasePercentage(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal view returns (uint256) {\\n        uint256 bidIncreasePercentage = nftContractAuctions[\\n            _nftContractAddress\\n        ][_tokenId].bidIncreasePercentage;\\n\\n        if (bidIncreasePercentage == 0) {\\n            return defaultBidIncreasePercentage;\\n        } else {\\n            return bidIncreasePercentage;\\n        }\\n    }\\n\\n    function _getAuctionBidPeriod(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 auctionBidPeriod = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].auctionBidPeriod;\\n\\n        if (auctionBidPeriod == 0) {\\n            return defaultAuctionBidPeriod;\\n        } else {\\n            return auctionBidPeriod;\\n        }\\n    }\\n\\n    /*\\n     * The default value for the NFT recipient is the highest bidder\\n     */\\n    function _getNftRecipient(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n        view\\n        returns (address)\\n    {\\n        address nftRecipient = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftRecipient;\\n\\n        if (nftRecipient == address(0)) {\\n            return\\n                nftContractAuctions[_nftContractAddress][_tokenId]\\n                    .nftHighestBidder;\\n        } else {\\n            return nftRecipient;\\n        }\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551    DEFAULT GETTER FUNCTIONS  \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551  TRANSFER NFTS TO CONTRACT   \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    function _transferNftToAuctionContract(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        IERC721(_nftContractAddress).transferFrom(\\n            msg.sender,\\n            address(this),\\n            _tokenId\\n        );\\n    }\\n\\n    function _transferNftBatchToAuctionContract(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds\\n    ) internal {\\n        for (uint256 i = 0; i < _batchTokenIds.length; i++) {\\n            IERC721(_nftContractAddress).transferFrom(\\n                msg.sender,\\n                address(this),\\n                _batchTokenIds[i]\\n            );\\n            if (i != 0) {\\n                //Don't set the first one because we set this later as the NFTSeller parameter in the struct\\n                nftOwner[_nftContractAddress][_batchTokenIds[i]] = msg.sender;\\n            }\\n        }\\n        _reverseAndResetPreviousBid(_nftContractAddress, _batchTokenIds[0]);\\n        nftContractAuctions[_nftContractAddress][_batchTokenIds[0]]\\n            .batchTokenIds = _batchTokenIds;\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551  TRANSFER NFTS TO CONTRACT   \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551       AUCTION CREATION       \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    /**\\n     * Setup parameters applicable to all auctions and whitelised sales:\\n     * -> ERC20 Token for payment (if specified by the seller) : _erc20Token\\n     * -> minimum price : _minPrice\\n     * -> buy now price : _buyNowPrice\\n     * -> the nft seller: msg.sender\\n     * -> The fee recipients & their respective percentages for a sucessful auction/sale\\n     */\\n    function _setupAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _minPrice,\\n        uint256 _buyNowPrice,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    )\\n        internal\\n        minPriceDoesNotExceedLimit(_buyNowPrice, _minPrice)\\n        correctFeeRecipientsAndPercentages(\\n            _feeRecipients.length,\\n            _feePercentages.length\\n        )\\n        isFeePercentagesLessThanMaximum(_feePercentages)\\n    {\\n        if (_erc20Token != address(0)) {\\n            nftContractAuctions[_nftContractAddress][_tokenId]\\n                .ERC20Token = _erc20Token;\\n        }\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .feeRecipients = _feeRecipients;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .feePercentages = _feePercentages;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .buyNowPrice = _buyNowPrice;\\n        nftContractAuctions[_nftContractAddress][_tokenId].minPrice = _minPrice;\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftSeller = msg\\n            .sender;\\n    }\\n\\n    function _createNewNftAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _minPrice,\\n        uint256 _buyNowPrice,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    ) internal {\\n        // Sending the NFT to this contract\\n        _transferNftToAuctionContract(_nftContractAddress, _tokenId);\\n        _setupAuction(\\n            _nftContractAddress,\\n            _tokenId,\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n        emit NftAuctionCreated(\\n            _nftContractAddress,\\n            _tokenId,\\n            msg.sender,\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            _getAuctionBidPeriod(_nftContractAddress, _tokenId),\\n            _getBidIncreasePercentage(_nftContractAddress, _tokenId),\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n        _updateOngoingAuction(_nftContractAddress, _tokenId);\\n    }\\n\\n    /**\\n     * Create an auction that uses the default bid increase percentage\\n     * & the default auction bid period.\\n     */\\n    function createDefaultNftAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _minPrice,\\n        uint256 _buyNowPrice,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    ) external priceGreaterThanZero(_minPrice) {\\n        _createNewNftAuction(\\n            _nftContractAddress,\\n            _tokenId,\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n    }\\n\\n    function createNewNftAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _minPrice,\\n        uint256 _buyNowPrice,\\n        uint256 _auctionBidPeriod, //this is the time that the auction lasts until another bid occurs\\n        uint256 _bidIncreasePercentage,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    )\\n        external\\n        priceGreaterThanZero(_minPrice)\\n        increasePercentageAboveMinimum(_bidIncreasePercentage)\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .auctionBidPeriod = _auctionBidPeriod;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .bidIncreasePercentage = _bidIncreasePercentage;\\n        _createNewNftAuction(\\n            _nftContractAddress,\\n            _tokenId,\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n    }\\n\\n    function _createBatchNftAuction(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds,\\n        address _erc20Token,\\n        uint256 _minPrice,\\n        uint256 _buyNowPrice,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    ) internal {\\n        _transferNftBatchToAuctionContract(_nftContractAddress, _batchTokenIds);\\n        _setupAuction(\\n            _nftContractAddress,\\n            _batchTokenIds[0],\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n        uint256 auctionBidPeriod = _getAuctionBidPeriod(\\n            _nftContractAddress,\\n            _batchTokenIds[0]\\n        );\\n        uint256 bidIncreasePercentage = _getBidIncreasePercentage(\\n            _nftContractAddress,\\n            _batchTokenIds[0]\\n        );\\n        emit NftBatchAuctionCreated(\\n            _nftContractAddress,\\n            _batchTokenIds[0],\\n            _batchTokenIds,\\n            msg.sender,\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            auctionBidPeriod,\\n            bidIncreasePercentage,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n    }\\n\\n    function createDefaultBatchNftAuction(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds,\\n        address _erc20Token,\\n        uint256 _minPrice,\\n        uint256 _buyNowPrice,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    )\\n        external\\n        priceGreaterThanZero(_minPrice)\\n        batchWithinLimits(_batchTokenIds.length)\\n    {\\n        _createBatchNftAuction(\\n            _nftContractAddress,\\n            _batchTokenIds,\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n    }\\n\\n    /*\\n     * Create an auction for multiple NFTs in a batch.\\n     * The first token in the batch is used as the identifier for the auction.\\n     * Users must be aware of this tokenId when creating a batch auction.\\n     */\\n    function createBatchNftAuction(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds,\\n        address _erc20Token,\\n        uint256 _minPrice,\\n        uint256 _buyNowPrice,\\n        uint256 _auctionBidPeriod, //this is the time that the auction lasts until another bid occurs\\n        uint256 _bidIncreasePercentage,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    )\\n        external\\n        priceGreaterThanZero(_minPrice)\\n        batchWithinLimits(_batchTokenIds.length)\\n        increasePercentageAboveMinimum(_bidIncreasePercentage)\\n    {\\n        nftContractAuctions[_nftContractAddress][_batchTokenIds[0]]\\n            .auctionBidPeriod = _auctionBidPeriod;\\n        nftContractAuctions[_nftContractAddress][_batchTokenIds[0]]\\n            .bidIncreasePercentage = _bidIncreasePercentage;\\n        _createBatchNftAuction(\\n            _nftContractAddress,\\n            _batchTokenIds,\\n            _erc20Token,\\n            _minPrice,\\n            _buyNowPrice,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551       AUCTION CREATION       \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551            SALES             \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    /********************************************************************\\n     * Allows for a standard sale mechanism where the NFT seller can    *\\n     * can select an address to be whitelisted. This address is then    *\\n     * allowed to make a bid on the NFT. No other address can bid on    *\\n     * the NFT.                                                         *\\n     ********************************************************************/\\n    function _setupSale(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _buyNowPrice,\\n        address _whitelistedBuyer,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    )\\n        internal\\n        correctFeeRecipientsAndPercentages(\\n            _feeRecipients.length,\\n            _feePercentages.length\\n        )\\n        isFeePercentagesLessThanMaximum(_feePercentages)\\n    {\\n        if (_erc20Token != address(0)) {\\n            nftContractAuctions[_nftContractAddress][_tokenId]\\n                .ERC20Token = _erc20Token;\\n        }\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .feeRecipients = _feeRecipients;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .feePercentages = _feePercentages;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .buyNowPrice = _buyNowPrice;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .whitelistedBuyer = _whitelistedBuyer;\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftSeller = msg\\n            .sender;\\n    }\\n\\n    function createSale(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _buyNowPrice,\\n        address _whitelistedBuyer,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    ) external priceGreaterThanZero(_buyNowPrice) {\\n        _transferNftToAuctionContract(_nftContractAddress, _tokenId);\\n        //min price = 0\\n        _setupSale(\\n            _nftContractAddress,\\n            _tokenId,\\n            _erc20Token,\\n            _buyNowPrice,\\n            _whitelistedBuyer,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n\\n        emit SaleCreated(\\n            _nftContractAddress,\\n            _tokenId,\\n            msg.sender,\\n            _erc20Token,\\n            _buyNowPrice,\\n            _whitelistedBuyer,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n        //check if buyNowPrice is meet and conclude sale, otherwise reverse the early bid\\n        if (_isABidMade(_nftContractAddress, _tokenId)) {\\n            if (\\n                //we only revert the underbid if the seller specifies a different\\n                //whitelisted buyer to the highest bidder\\n                _isHighestBidderAllowedToPurchaseNFT(\\n                    _nftContractAddress,\\n                    _tokenId\\n                )\\n            ) {\\n                if (_isBuyNowPriceMet(_nftContractAddress, _tokenId)) {\\n                    _transferNftAndPaySeller(_nftContractAddress, _tokenId);\\n                }\\n            } else {\\n                _reverseAndResetPreviousBid(_nftContractAddress, _tokenId);\\n            }\\n        }\\n    }\\n\\n    function createBatchSale(\\n        address _nftContractAddress,\\n        uint256[] memory _batchTokenIds,\\n        address _erc20Token,\\n        uint256 _buyNowPrice,\\n        address _whitelistedBuyer,\\n        address[] memory _feeRecipients,\\n        uint32[] memory _feePercentages\\n    )\\n        external\\n        priceGreaterThanZero(_buyNowPrice)\\n        batchWithinLimits(_batchTokenIds.length)\\n    {\\n        _transferNftBatchToAuctionContract(_nftContractAddress, _batchTokenIds);\\n        _setupSale(\\n            _nftContractAddress,\\n            _batchTokenIds[0],\\n            _erc20Token,\\n            _buyNowPrice,\\n            _whitelistedBuyer,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n\\n        emit BatchSaleCreated(\\n            _nftContractAddress,\\n            _batchTokenIds[0],\\n            _batchTokenIds,\\n            msg.sender,\\n            _erc20Token,\\n            _buyNowPrice,\\n            _whitelistedBuyer,\\n            _feeRecipients,\\n            _feePercentages\\n        );\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551            SALES             \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551        BID FUNCTIONS        \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    /********************************************************************\\n     * Make bids with ETH or an ERC20 Token specified by the NFT seller.*\\n     * Additionally, a buyer can pay the asking price to conclude a sale*\\n     * of an NFT.                                                      *\\n     ********************************************************************/\\n\\n    function _makeBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _tokenAmount\\n    )\\n        internal\\n        notNftSeller(_nftContractAddress, _tokenId)\\n        paymentAccepted(\\n            _nftContractAddress,\\n            _tokenId,\\n            _erc20Token,\\n            _tokenAmount\\n        )\\n        bidAmountMeetsBidRequirements(\\n            _nftContractAddress,\\n            _tokenId,\\n            _tokenAmount\\n        )\\n    {\\n        _reversePreviousBidAndUpdateHighestBid(\\n            _nftContractAddress,\\n            _tokenId,\\n            _tokenAmount\\n        );\\n        emit BidMade(\\n            _nftContractAddress,\\n            _tokenId,\\n            msg.sender,\\n            msg.value,\\n            _erc20Token,\\n            _tokenAmount\\n        );\\n        _updateOngoingAuction(_nftContractAddress, _tokenId);\\n    }\\n\\n    function makeBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _tokenAmount\\n    )\\n        external\\n        payable\\n        auctionOngoing(_nftContractAddress, _tokenId)\\n        onlyApplicableBuyer(_nftContractAddress, _tokenId)\\n    {\\n        _makeBid(_nftContractAddress, _tokenId, _erc20Token, _tokenAmount);\\n    }\\n\\n    function makeCustomBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _erc20Token,\\n        uint256 _tokenAmount,\\n        address _nftRecipient\\n    )\\n        external\\n        payable\\n        auctionOngoing(_nftContractAddress, _tokenId)\\n        notZeroAddress(_nftRecipient)\\n        onlyApplicableBuyer(_nftContractAddress, _tokenId)\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftRecipient = _nftRecipient;\\n        _makeBid(_nftContractAddress, _tokenId, _erc20Token, _tokenAmount);\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551        BID FUNCTIONS         \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551       UPDATE AUCTION         \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    /***************************************************************\\n     * Settle an auction or sale if the buyNowPrice is met or set  *\\n     *  auction period to begin if the minimum price has been met. *\\n     ***************************************************************/\\n    function _updateOngoingAuction(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        if (_isBuyNowPriceMet(_nftContractAddress, _tokenId)) {\\n            _transferNftAndPaySeller(_nftContractAddress, _tokenId);\\n            return;\\n        }\\n        //min price not set, nft not up for auction yet\\n        if (_isMinimumBidMade(_nftContractAddress, _tokenId)) {\\n            _updateAuctionEnd(_nftContractAddress, _tokenId);\\n        }\\n    }\\n\\n    function _updateAuctionEnd(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n    {\\n        //the auction end is always set to now + the bid period\\n        nftContractAuctions[_nftContractAddress][_tokenId].auctionEnd =\\n            _getAuctionBidPeriod(_nftContractAddress, _tokenId) +\\n            block.timestamp;\\n        emit AuctionPeriodUpdated(\\n            _nftContractAddress,\\n            _tokenId,\\n            nftContractAuctions[_nftContractAddress][_tokenId].auctionEnd\\n        );\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551       UPDATE AUCTION         \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551       RESET FUNCTIONS        \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    /*\\n     * Reset all auction related parameters for an NFT.\\n     * This effectively removes an EFT as an item up for auction\\n     */\\n    function _resetAuction(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId].minPrice = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].buyNowPrice = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].auctionEnd = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].auctionBidPeriod = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .bidIncreasePercentage = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftSeller = address(\\n            0\\n        );\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .whitelistedBuyer = address(0);\\n        delete nftContractAuctions[_nftContractAddress][_tokenId].batchTokenIds;\\n        nftContractAuctions[_nftContractAddress][_tokenId].ERC20Token = address(\\n            0\\n        );\\n    }\\n\\n    /*\\n     * Reset all bid related parameters for an NFT.\\n     * This effectively sets an NFT as having no active bids\\n     */\\n    function _resetBids(address _nftContractAddress, uint256 _tokenId)\\n        internal\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftHighestBidder = address(0);\\n        nftContractAuctions[_nftContractAddress][_tokenId].nftHighestBid = 0;\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftRecipient = address(0);\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551       RESET FUNCTIONS        \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551         UPDATE BIDS          \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /******************************************************************\\n     * Internal functions that update bid parameters and reverse bids *\\n     * to ensure contract only holds the highest bid.                 *\\n     ******************************************************************/\\n    function _updateHighestBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _tokenAmount\\n    ) internal {\\n        address auctionERC20Token = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].ERC20Token;\\n        if (_isERC20Auction(auctionERC20Token)) {\\n            IERC20(auctionERC20Token).transferFrom(\\n                msg.sender,\\n                address(this),\\n                _tokenAmount\\n            );\\n            nftContractAuctions[_nftContractAddress][_tokenId]\\n                .nftHighestBid = _tokenAmount;\\n        } else {\\n            nftContractAuctions[_nftContractAddress][_tokenId]\\n                .nftHighestBid = msg.value;\\n        }\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftHighestBidder = msg.sender;\\n    }\\n\\n    function _reverseAndResetPreviousBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        address nftHighestBidder = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBidder;\\n\\n        uint256 nftHighestBid = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBid;\\n        _resetBids(_nftContractAddress, _tokenId);\\n\\n        _payout(_nftContractAddress, _tokenId, nftHighestBidder, nftHighestBid);\\n    }\\n\\n    function _reversePreviousBidAndUpdateHighestBid(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _tokenAmount\\n    ) internal {\\n        address prevNftHighestBidder = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBidder;\\n\\n        uint256 prevNftHighestBid = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBid;\\n        _updateHighestBid(_nftContractAddress, _tokenId, _tokenAmount);\\n\\n        if (prevNftHighestBidder != address(0)) {\\n            _payout(\\n                _nftContractAddress,\\n                _tokenId,\\n                prevNftHighestBidder,\\n                prevNftHighestBid\\n            );\\n        }\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551         UPDATE BIDS          \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551  TRANSFER NFT & PAY SELLER   \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    function _transferNftAndPaySeller(\\n        address _nftContractAddress,\\n        uint256 _tokenId\\n    ) internal {\\n        address _nftSeller = nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftSeller;\\n        address _nftHighestBidder = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBidder;\\n        address _nftRecipient = _getNftRecipient(_nftContractAddress, _tokenId);\\n        uint256 _nftHighestBid = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBid;\\n        _resetBids(_nftContractAddress, _tokenId);\\n        _payFeesAndSeller(\\n            _nftContractAddress,\\n            _tokenId,\\n            _nftSeller,\\n            _nftHighestBid\\n        );\\n        //reset bid and transfer nft last to avoid reentrancy\\n        uint256[] memory batchTokenIds = nftContractAuctions[\\n            _nftContractAddress\\n        ][_tokenId].batchTokenIds;\\n        uint256 numberOfTokens = batchTokenIds.length;\\n        if (numberOfTokens > 0) {\\n            for (uint256 i = 0; i < numberOfTokens; i++) {\\n                IERC721(_nftContractAddress).transferFrom(\\n                    address(this),\\n                    _nftRecipient,\\n                    batchTokenIds[i]\\n                );\\n                nftOwner[_nftContractAddress][batchTokenIds[i]] = address(0);\\n            }\\n        } else {\\n            IERC721(_nftContractAddress).transferFrom(\\n                address(this),\\n                _nftRecipient,\\n                _tokenId\\n            );\\n        }\\n        _resetAuction(_nftContractAddress, _tokenId);\\n        emit NFTTransferredAndSellerPaid(\\n            _nftContractAddress,\\n            _tokenId,\\n            _nftSeller,\\n            _nftHighestBid,\\n            _nftHighestBidder,\\n            _nftRecipient\\n        );\\n    }\\n\\n    function _payFeesAndSeller(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _nftSeller,\\n        uint256 _highestBid\\n    ) internal {\\n        uint256 feesPaid;\\n        for (\\n            uint256 i = 0;\\n            i <\\n            nftContractAuctions[_nftContractAddress][_tokenId]\\n                .feeRecipients\\n                .length;\\n            i++\\n        ) {\\n            uint256 fee = _getPortionOfBid(\\n                _highestBid,\\n                nftContractAuctions[_nftContractAddress][_tokenId]\\n                    .feePercentages[i]\\n            );\\n            feesPaid = feesPaid + fee;\\n            _payout(\\n                _nftContractAddress,\\n                _tokenId,\\n                nftContractAuctions[_nftContractAddress][_tokenId]\\n                    .feeRecipients[i],\\n                fee\\n            );\\n        }\\n        _payout(\\n            _nftContractAddress,\\n            _tokenId,\\n            _nftSeller,\\n            (_highestBid - feesPaid)\\n        );\\n    }\\n\\n    function _payout(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _recipient,\\n        uint256 _amount\\n    ) internal {\\n        address auctionERC20Token = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].ERC20Token;\\n        if (_isERC20Auction(auctionERC20Token)) {\\n            IERC20(auctionERC20Token).transfer(_recipient, _amount);\\n        } else {\\n            // attempt to send the funds to the recipient\\n            (bool success, ) = payable(_recipient).call{value: _amount}(\\\"\\\");\\n            // if it failed, update their credit balance so they can pull it later\\n            if (!success) {\\n                failedTransferCredits[_recipient] =\\n                    failedTransferCredits[_recipient] +\\n                    _amount;\\n            }\\n        }\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551  TRANSFER NFT & PAY SELLER   \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551      SETTLE & WITHDRAW       \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    function settleAuction(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        isAuctionOver(_nftContractAddress, _tokenId)\\n    {\\n        _transferNftAndPaySeller(_nftContractAddress, _tokenId);\\n        emit AuctionSettled(_nftContractAddress, _tokenId, msg.sender);\\n    }\\n\\n    function withdrawNft(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        minimumBidNotMade(_nftContractAddress, _tokenId)\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n    {\\n        uint256[] memory batchTokenIds = nftContractAuctions[\\n            _nftContractAddress\\n        ][_tokenId].batchTokenIds;\\n        uint256 numberOfTokens = batchTokenIds.length;\\n        if (numberOfTokens > 0) {\\n            for (uint256 i = 0; i < numberOfTokens; i++) {\\n                IERC721(_nftContractAddress).transferFrom(\\n                    address(this),\\n                    nftContractAuctions[_nftContractAddress][_tokenId]\\n                        .nftSeller,\\n                    batchTokenIds[i]\\n                );\\n                nftOwner[_nftContractAddress][batchTokenIds[i]] = address(0);\\n            }\\n        } else {\\n            IERC721(_nftContractAddress).transferFrom(\\n                address(this),\\n                nftContractAuctions[_nftContractAddress][_tokenId].nftSeller,\\n                _tokenId\\n            );\\n        }\\n        _resetAuction(_nftContractAddress, _tokenId);\\n        emit NFTWithdrawn(_nftContractAddress, _tokenId, msg.sender);\\n    }\\n\\n    function withdrawBid(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        minimumBidNotMade(_nftContractAddress, _tokenId)\\n    {\\n        address nftHighestBidder = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBidder;\\n        require(msg.sender == nftHighestBidder, \\\"Cannot withdraw funds\\\");\\n\\n        uint256 nftHighestBid = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBid;\\n        _resetBids(_nftContractAddress, _tokenId);\\n\\n        _payout(_nftContractAddress, _tokenId, nftHighestBidder, nftHighestBid);\\n\\n        emit BidWithdrawn(_nftContractAddress, _tokenId, msg.sender);\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551      SETTLE & WITHDRAW       \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551       UPDATE AUCTION         \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    function updateWhitelistedBuyer(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        address _newWhitelistedBuyer\\n    ) external onlyNftSeller(_nftContractAddress, _tokenId) {\\n        require(_isASale(_nftContractAddress, _tokenId), \\\"Not a sale\\\");\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .whitelistedBuyer = _newWhitelistedBuyer;\\n        //if an underbid is by a non whitelisted buyer,reverse that bid\\n        address nftHighestBidder = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBidder;\\n        uint256 nftHighestBid = nftContractAuctions[_nftContractAddress][\\n            _tokenId\\n        ].nftHighestBid;\\n        if (nftHighestBid > 0 && !(nftHighestBidder == _newWhitelistedBuyer)) {\\n            //we only revert the underbid if the seller specifies a different\\n            //whitelisted buyer to the highest bider\\n\\n            _resetBids(_nftContractAddress, _tokenId);\\n\\n            _payout(\\n                _nftContractAddress,\\n                _tokenId,\\n                nftHighestBidder,\\n                nftHighestBid\\n            );\\n        }\\n\\n        emit WhitelistedBuyerUpdated(\\n            _nftContractAddress,\\n            _tokenId,\\n            _newWhitelistedBuyer\\n        );\\n    }\\n\\n    function updateMinimumPrice(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _newMinPrice\\n    )\\n        external\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n        minimumBidNotMade(_nftContractAddress, _tokenId)\\n        isNotASale(_nftContractAddress, _tokenId)\\n        priceGreaterThanZero(_newMinPrice)\\n        minPriceDoesNotExceedLimit(\\n            nftContractAuctions[_nftContractAddress][_tokenId].buyNowPrice,\\n            _newMinPrice\\n        )\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .minPrice = _newMinPrice;\\n\\n        emit MinimumPriceUpdated(_nftContractAddress, _tokenId, _newMinPrice);\\n\\n        if (_isMinimumBidMade(_nftContractAddress, _tokenId)) {\\n            _updateAuctionEnd(_nftContractAddress, _tokenId);\\n        }\\n    }\\n\\n    function updateBuyNowPrice(\\n        address _nftContractAddress,\\n        uint256 _tokenId,\\n        uint256 _newBuyNowPrice\\n    )\\n        external\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n        priceGreaterThanZero(_newBuyNowPrice)\\n        minPriceDoesNotExceedLimit(\\n            _newBuyNowPrice,\\n            nftContractAuctions[_nftContractAddress][_tokenId].minPrice\\n        )\\n    {\\n        nftContractAuctions[_nftContractAddress][_tokenId]\\n            .buyNowPrice = _newBuyNowPrice;\\n        emit BuyNowPriceUpdated(_nftContractAddress, _tokenId, _newBuyNowPrice);\\n        if (_isBuyNowPriceMet(_nftContractAddress, _tokenId)) {\\n            _transferNftAndPaySeller(_nftContractAddress, _tokenId);\\n        }\\n    }\\n\\n    /*\\n     * The NFT seller can opt to end an auction by taking the current highest bid.\\n     */\\n    function takeHighestBid(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        onlyNftSeller(_nftContractAddress, _tokenId)\\n    {\\n        require(\\n            _isABidMade(_nftContractAddress, _tokenId),\\n            \\\"cannot payout 0 bid\\\"\\n        );\\n        _transferNftAndPaySeller(_nftContractAddress, _tokenId);\\n        emit HighestBidTaken(_nftContractAddress, _tokenId);\\n    }\\n\\n    /*\\n     * Query the owner of an NFT deposited for auction\\n     */\\n    function ownerOfNFT(address _nftContractAddress, uint256 _tokenId)\\n        external\\n        view\\n        returns (address)\\n    {\\n        address nftSeller = nftContractAuctions[_nftContractAddress][_tokenId]\\n            .nftSeller;\\n        if (nftSeller != address(0)) {\\n            return nftSeller;\\n        }\\n        address owner = nftOwner[_nftContractAddress][_tokenId];\\n\\n        require(owner != address(0), \\\"NFT not deposited\\\");\\n        return owner;\\n    }\\n\\n    /*\\n     * If the transfer of a bid has failed, allow the recipient to reclaim their amount later.\\n     */\\n    function withdrawAllFailedCredits() external {\\n        uint256 amount = failedTransferCredits[msg.sender];\\n\\n        require(amount != 0, \\\"no credits to withdraw\\\");\\n\\n        failedTransferCredits[msg.sender] = 0;\\n\\n        (bool successfulWithdraw, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        require(successfulWithdraw, \\\"withdraw failed\\\");\\n    }\\n\\n    /**********************************/\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551             END              \\u2551\\n      \\u2551       UPDATE AUCTION         \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n    /**********************************/\\n}\\n\",\"keccak256\":\"0x1677c94332256a27af622fc80a52a90ba8f47e331abc4f12d3bf86c0412f0a7a\",\"license\":\"Unlicense\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101405760003560e01c80637d8fd75e116100b6578063c54e479f1161006f578063c54e479f14610452578063cd4eda1c14610472578063d8fc651914610488578063e1d544c9146104a8578063e45c9e79146104c8578063f04e7616146104db57600080fd5b80637d8fd75e14610393578063848e5c77146103a65780639c0b9966146103c6578063a676863d146103dc578063b603c7d0146103fc578063b6ad69141461043d57600080fd5b8063412d1bac11610108578063412d1bac146102d35780634cb8ef5b146102f35780635138b08c14610313578063572a3805146103335780635b0a1aa5146103535780637a8a48aa1461037357600080fd5b8063041fa0b814610145578063076b73ac1461023f578063186779d51461026157806320950fc6146102855780633d87d5fb146102bd575b600080fd5b34801561015157600080fd5b506101d26101603660046132bb565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004850154600586015460088701546009880154600a890154600b8a0154600c909a01549899979896979596949593946001600160a01b03938416949284169391821692821691168b565b604080519b8c5260208c019a909a52988a01979097526060890195909552608088019390935260a08701919091526001600160a01b0390811660c087015290811660e086015290811661010085015290811661012084015216610140820152610160015b60405180910390f35b34801561024b57600080fd5b5061025f61025a3660046132e4565b6104fb565b005b34801561026d57600080fd5b5061027760045481565b604051908152602001610236565b34801561029157600080fd5b506102a56102a03660046132bb565b610656565b6040516001600160a01b039091168152602001610236565b3480156102c957600080fd5b5061027760055481565b3480156102df57600080fd5b5061025f6102ee3660046131ee565b6106fd565b3480156102ff57600080fd5b5061025f61030e3660046132bb565b61084a565b34801561031f57600080fd5b5061025f61032e3660046132bb565b61095f565b34801561033f57600080fd5b5061025f61034e3660046133b8565b610a03565b34801561035f57600080fd5b5061025f61036e366004613421565b610aed565b34801561037f57600080fd5b5061025f61038e3660046130b2565b610b1d565b61025f6103a1366004613362565b610c28565b3480156103b257600080fd5b5061025f6103c13660046132bb565b610d76565b3480156103d257600080fd5b5061027760035481565b3480156103e857600080fd5b5061025f6103f7366004613483565b610e6f565b34801561040857600080fd5b506102a56104173660046132bb565b60016020908152600092835260408084209091529082529020546001600160a01b031681565b34801561044957600080fd5b5061025f610efd565b34801561045e57600080fd5b5061025f61046d3660046134f7565b610ff0565b34801561047e57600080fd5b5061027760065481565b34801561049457600080fd5b5061025f6104a33660046132bb565b61112f565b3480156104b457600080fd5b5061025f6104c33660046134f7565b611441565b61025f6104d636600461331f565b611601565b3480156104e757600080fd5b5061025f6104f6366004613172565b6116b2565b6001600160a01b038381166000908152602081815260408083208684529091529020600901548491849116331461054d5760405162461bcd60e51b815260040161054490613836565b60405180910390fd5b610557858561171c565b6105905760405162461bcd60e51b815260206004820152600a6024820152694e6f7420612073616c6560b01b6044820152606401610544565b6001600160a01b038581166000908152602081815260408083208884529091529020600a810180546001600160a01b031916868416179055600881015460049091015491169080158015906105f75750846001600160a01b0316826001600160a01b031614155b15610612576106068787611775565b610612878784846117c2565b7f7502912f483c1fb3f89bf8664bea10db517c2093040d379e78e169e06752364687878760405161064593929190613614565b60405180910390a150505050505050565b6001600160a01b03808316600090815260208181526040808320858452909152812060090154909116801561068c5790506106f7565b6001600160a01b03808516600090815260016020908152604080832087845290915290205416806106f35760405162461bcd60e51b8152602060048201526011602482015270139195081b9bdd0819195c1bdcda5d1959607a1b6044820152606401610544565b9150505b92915050565b856000811161071e5760405162461bcd60e51b8152600401610544906138fe565b8851600181118015610731575060648111155b61074d5760405162461bcd60e51b815260040161054490613a33565b846005548110156107705760405162461bcd60e51b815260040161054490613972565b6001600160a01b038c1660009081526020819052604081208c518992908e9082906107ab57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060020181905550856000808e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d60008151811061081057634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206005018190555061083c8c8c8c8c8c8a8a611919565b505050505050505050505050565b81816108568282611a31565b156108735760405162461bcd60e51b8152600401610544906138c9565b6001600160a01b03808516600090815260208181526040808320878452909152902060080154163381146108e15760405162461bcd60e51b815260206004820152601560248201527443616e6e6f742077697468647261772066756e647360581b6044820152606401610544565b6001600160a01b0385166000908152602081815260408083208784529091529020600401546109108686611775565b61091c868684846117c2565b7f10d9bddf66f639dd3c5a6ad2db5ae3102c2b468dfb90a4b0da219435f24a970d86863360405161094f93929190613614565b60405180910390a1505050505050565b818161096b8282611a8d565b156109b85760405162461bcd60e51b815260206004820152601760248201527f41756374696f6e206973206e6f7420796574206f7665720000000000000000006044820152606401610544565b6109c28484611ac3565b7fe6b94748c5d6e0d188a0fcb9b7f2973b01fc0095627f1ec5accdcd9d2e65ca368484336040516109f593929190613614565b60405180910390a150505050565b8360008111610a245760405162461bcd60e51b8152600401610544906138fe565b610a2e8888611db9565b610a3d88888888888888611e17565b7fb80cdee6b1354abc70b544c94895037fab347eead2f10446536215f477cc546d8888338989898989604051610a7a989796959493929190613637565b60405180910390a16001600160a01b0388166000908152602081815260408083208a845290915290206004015415610ae357610ab68888611ffa565b15610ad957610ac58888612044565b15610ad457610ad48888611ac3565b610ae3565b610ae388886120a4565b5050505050505050565b8360008111610b0e5760405162461bcd60e51b8152600401610544906138fe565b610ae3888888888888886120f0565b8360008111610b3e5760405162461bcd60e51b8152600401610544906138fe565b8651600181118015610b51575060648111155b610b6d5760405162461bcd60e51b815260040161054490613a33565b610b778989612177565b610bae8989600081518110610b9c57634e487b7160e01b600052603260045260246000fd5b60200260200101518989898989611e17565b7f4c30da7605b8b28330e91881ffc20f5b3f236e5f0ecba8dd8e0fc6c92bdbdaab8989600081518110610bf157634e487b7160e01b600052603260045260246000fd5b60200260200101518a338b8b8b8b8b604051610c159998979695949392919061371e565b60405180910390a1505050505050505050565b8484610c348282611a8d565b610c745760405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881a185cc8195b991959607a1b6044820152606401610544565b826001600160a01b038116610ccb5760405162461bcd60e51b815260206004820152601860248201527f63616e6e6f7420737065636966792030206164647265737300000000000000006044820152606401610544565b8787610cd7828261233d565b1580610d0857506001600160a01b038281166000908152602081815260408083208584529091529020600a01541633145b610d245760405162461bcd60e51b81526004016105449061387b565b6001600160a01b038a81166000908152602081815260408083208d84529091529020600b0180546001600160a01b031916918816919091179055610d6a8a8a8a8a612368565b50505050505050505050565b6001600160a01b0382811660009081526020818152604080832085845290915290206009015483918391163314610dbf5760405162461bcd60e51b815260040161054490613836565b6001600160a01b038416600090815260208181526040808320868452909152902060040154610e265760405162461bcd60e51b815260206004820152601360248201527218d85b9b9bdd081c185e5bdd5d080c08189a59606a1b6044820152606401610544565b610e308484611ac3565b604080516001600160a01b0386168152602081018590527f711f4eae05533b90c24ff0ae762d6e9e1ef1b2c85d4c484a2913c5201bcbb7c991016109f5565b8560008111610e905760405162461bcd60e51b8152600401610544906138fe565b83600554811015610eb35760405162461bcd60e51b815260040161054490613972565b6001600160a01b038b166000908152602081815260408083208d8452909152902060028101879055600501859055610ef08b8b8b8b8b89896120f0565b5050505050505050505050565b3360009081526002602052604090205480610f535760405162461bcd60e51b81526020600482015260166024820152756e6f206372656469747320746f20776974686472617760501b6044820152606401610544565b336000818152600260205260408082208290555190919083908381818185875af1925050503d8060008114610fa4576040519150601f19603f3d011682016040523d82523d6000602084013e610fa9565b606091505b5050905080610fec5760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b6044820152606401610544565b5050565b6001600160a01b03838116600090815260208181526040808320868452909152902060090154849184911633146110395760405162461bcd60e51b815260040161054490613836565b826000811161105a5760405162461bcd60e51b8152600401610544906138fe565b6001600160a01b038616600090815260208181526040808320888452909152902054849081158061109657508061109383600654612552565b10155b6110b25760405162461bcd60e51b8152600401610544906139e9565b6001600160a01b0388166000818152602081815260408083208b84528252918290206001018990558151928352820189905281018790527f4f15fa313cb566165a50ebd19ae85a46e69e5f6b5a9269bd90cde606bf90cd619060600160405180910390a16111208888612044565b15610ae357610ae38888611ac3565b818161113b8282611a31565b156111585760405162461bcd60e51b8152600401610544906138c9565b6001600160a01b03848116600090815260208181526040808320878452909152902060090154859185911633146111a15760405162461bcd60e51b815260040161054490613836565b6001600160a01b03861660009081526020818152604080832088845282528083206006018054825181850281018501909352808352919290919083018282801561120a57602002820191906000526020600020905b8154815260200190600101908083116111f6575b50508351939450508215915061137190505760005b8181101561136b576001600160a01b03808a166000818152602081815260408083208d8452909152902060090154855191926323b872dd9230929091169087908690811061127d57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b81526004016112a3939291906135f0565b600060405180830381600087803b1580156112bd57600080fd5b505af11580156112d1573d6000803e3d6000fd5b505050506000600160008b6001600160a01b03166001600160a01b03168152602001908152602001600020600085848151811061131e57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808061136390613b72565b91505061121f565b506113f2565b6001600160a01b038089166000818152602081815260408083208c8452909152908190206009015490516323b872dd60e01b815291926323b872dd926113bf92309216908c906004016135f0565b600060405180830381600087803b1580156113d957600080fd5b505af11580156113ed573d6000803e3d6000fd5b505050505b6113fc888861256b565b7fc9e322753b88ef200a699612ee80267ec1889ce31dd470742469de7a75c3498288883360405161142f93929190613614565b60405180910390a15050505050505050565b6001600160a01b038381166000908152602081815260408083208684529091529020600901548491849116331461148a5760405162461bcd60e51b815260040161054490613836565b84846114968282611a31565b156114b35760405162461bcd60e51b8152600401610544906138c9565b86866114bf828261171c565b1561150c5760405162461bcd60e51b815260206004820152601960248201527f4e6f74206170706c696361626c6520666f7220612073616c65000000000000006044820152606401610544565b866000811161152d5760405162461bcd60e51b8152600401610544906138fe565b6001600160a01b038a166000908152602081815260408083208c84529091529020600101548881158061156b57508061156883600654612552565b10155b6115875760405162461bcd60e51b8152600401610544906139e9565b6001600160a01b038c166000818152602081815260408083208f84528252918290208d9055815192835282018d905281018b90527fdcf27af4c564afa0c536dd1fa48e5fef0d9833378a1bddacc95922b902ebfc329060600160405180910390a16115f28c8c611a31565b1561083c5761083c8c8c61260e565b838361160d8282611a8d565b61164d5760405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881a185cc8195b991959607a1b6044820152606401610544565b8585611659828261233d565b158061168a57506001600160a01b038281166000908152602081815260408083208584529091529020600a01541633145b6116a65760405162461bcd60e51b81526004016105449061387b565b610ae388888888612368565b83600081116116d35760405162461bcd60e51b8152600401610544906138fe565b86516001811180156116e6575060648111155b6117025760405162461bcd60e51b815260040161054490613a33565b61171189898989898989611919565b505050505050505050565b6001600160a01b0382166000908152602081815260408083208484529091528120600101541580159061176e57506001600160a01b038316600090815260208181526040808320858452909152902054155b9392505050565b6001600160a01b03919091166000908152602081815260408083209383529290529081206008810180546001600160a01b03199081169091556004820192909255600b0180549091169055565b6001600160a01b038481166000908152602081815260408083208784529091529020600c01541680156118775760405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905282169063a9059cbb90604401602060405180830381600087803b15801561183957600080fd5b505af115801561184d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118719190613529565b50611912565b6000836001600160a01b03168360405160006040518083038185875af1925050503d80600081146118c4576040519150601f19603f3d011682016040523d82523d6000602084013e6118c9565b606091505b5050905080611910576001600160a01b0384166000908152600260205260409020546118f6908490613adc565b6001600160a01b0385166000908152600260205260409020555b505b5050505050565b6119238787612177565b61195a878760008151811061194857634e487b7160e01b600052603260045260246000fd5b6020026020010151878787878761268c565b600061198e888860008151811061198157634e487b7160e01b600052603260045260246000fd5b60200260200101516128ba565b905060006119c489896000815181106119b757634e487b7160e01b600052603260045260246000fd5b60200260200101516128f5565b90507f7793a795e1d5e1fa3d07e71e62be377a8e14feeaf5b9257fe7028653c0f6cd158989600081518110611a0957634e487b7160e01b600052603260045260246000fd5b60200260200101518a338b8b8b89898d8d604051610c159b9a999897969594939291906137a3565b6001600160a01b03821660009081526020818152604080832084845290915281205480158015906106f357506001600160a01b038416600090815260208181526040808320868452909152902060040154811115949350505050565b6001600160a01b0382166000908152602081815260408083208484529091528120600301548015806106f3575042109392505050565b6001600160a01b0382811660009081526020818152604080832085845290915281206009810154600890910154908316921690611b008585612929565b6001600160a01b038616600090815260208181526040808320888452909152902060040154909150611b328686611775565b611b3e86868684612985565b6001600160a01b038616600090815260208181526040808320888452825280832060060180548251818502810185019093528083529192909190830182828015611ba757602002820191906000526020600020905b815481526020019060010190808311611b93575b505083519394505082159150611ce990505760005b81811015611ce357886001600160a01b03166323b872dd3087868581518110611bf557634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b8152600401611c1b939291906135f0565b600060405180830381600087803b158015611c3557600080fd5b505af1158015611c49573d6000803e3d6000fd5b505050506000600160008b6001600160a01b03166001600160a01b031681526020019081526020016000206000858481518110611c9657634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508080611cdb90613b72565b915050611bbc565b50611d4c565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd90611d1990309088908c906004016135f0565b600060405180830381600087803b158015611d3357600080fd5b505af1158015611d47573d6000803e3d6000fd5b505050505b611d56888861256b565b604080516001600160a01b03808b168252602082018a90528089169282019290925260608101859052818716608082015290851660a08201527f669254f9d4b4af8ede0cec111d473fd4e9c93a1d30b7641198ffe90ef9543f929060c00161142f565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd90611de9903390309086906004016135f0565b600060405180830381600087803b158015611e0357600080fd5b505af1158015611910573d6000803e3d6000fd5b81518151808214611e3a5760405162461bcd60e51b815260040161054490613929565b826000805b8251811015611e8f57828181518110611e6857634e487b7160e01b600052603260045260246000fd5b602002602001015182611e7b9190613af4565b915080611e8781613b72565b915050611e3f565b506127108163ffffffff161115611ee85760405162461bcd60e51b815260206004820152601e60248201527f6665652070657263656e746167657320657863656564206d6178696d756d00006044820152606401610544565b6001600160a01b03891615611f32576001600160a01b038b81166000908152602081815260408083208e84529091529020600c0180546001600160a01b031916918b169190911790555b6001600160a01b038b166000908152602081815260408083208d845282529091208751611f6792600d90920191890190612dd5565b506001600160a01b038b166000908152602081815260408083208d845282529091208651611f9d92600790920191880190612e3a565b505050506001600160a01b039788166000908152602081815260408083209983529890529690962060018101949094555050600a82018054919095166001600160a01b031991821617909455600901805490931633179092555050565b6000612006838361233d565b158061176e57506001600160a01b038084166000908152602081815260408083208684529091529020600a810154600890910154821691161461176e565b6001600160a01b03821660009081526020818152604080832084845290915281206001015480158015906106f357506001600160a01b03841660009081526020818152604080832086845290915290206004015481111591505092915050565b6001600160a01b03828116600090815260208181526040808320858452909152902060088101546004909101549116906120de8484611775565b6120ea848484846117c2565b50505050565b6120fa8787611db9565b6121098787878787878761268c565b7f8f8f8a560fd776fbe3475a69cfae439ce87490ee342fa5974a3c05e6f20c975387873388888861213a8e8e6128ba565b6121448f8f6128f5565b8a8a60405161215c9a999897969594939291906136a5565b60405180910390a161216e8787612ac7565b50505050505050565b60005b815181101561229e57826001600160a01b03166323b872dd33308585815181106121b457634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b81526004016121da939291906135f0565b600060405180830381600087803b1580156121f457600080fd5b505af1158015612208573d6000803e3d6000fd5b505050508060001461228c576001600160a01b0383166000908152600160205260408120835133929085908590811061225157634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061229681613b72565b91505061217a565b506122d182826000815181106122c457634e487b7160e01b600052603260045260246000fd5b60200260200101516120a4565b6001600160a01b038216600090815260208190526040812082518392908390829061230c57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206006019080519060200190612338929190612ee4565b505050565b6001600160a01b0391821660009081526020818152604080832093835292905220600a015416151590565b6001600160a01b0384811660009081526020818152604080832087845290915290206009015485918591163314156123e25760405162461bcd60e51b815260206004820152601b60248201527f4f776e65722063616e6e6f7420626964206f6e206f776e204e465400000000006044820152606401610544565b858585856123f284848484612af9565b61245d5760405162461bcd60e51b815260206004820152603660248201527f42696420746f206265206d61646520696e207175616e746974696573206f66206044820152750e6e0cac6d2ccd2cac840e8ded6cadc40dee440cae8d60531b6064820152608401610544565b89898861246b838383612b86565b6124b75760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f7567682066756e647320746f20626964206f6e204e465400006044820152606401610544565b6124c28d8d8c612c42565b7fdfd4ac8cb43d5458b7a6f74f2d6461d77d4985704bdbc2fd4c4816444bbfd5e08d8d33348f8f604051612531969594939291906001600160a01b039687168152602081019590955292851660408501526060840191909152909216608082015260a081019190915260c00190565b60405180910390a16125438d8d612ac7565b50505050505050505050505050565b60006127106125618385613b3c565b61176e9190613b1c565b6001600160a01b0382166000908152602081815260408083208484529091528120818155600181018290556003810182905560028101829055600581018290556009810180546001600160a01b0319908116909155600a8201805490911690556125da91600690910190612f1f565b6001600160a01b0390911660009081526020818152604080832093835292905220600c0180546001600160a01b0319169055565b4261261983836128ba565b6126239190613adc565b6001600160a01b038316600081815260208181526040808320868452825291829020600301849055815192835282018490528101919091527f86dfe42cdd55a98787dad0c1abd84accf1ff905d6d6aa754eb8f9033c3cd9e429060600160405180910390a15050565b82848115806126a65750806126a383600654612552565b10155b6126c25760405162461bcd60e51b8152600401610544906139e9565b835183518082146126e55760405162461bcd60e51b815260040161054490613929565b846000805b825181101561273a5782818151811061271357634e487b7160e01b600052603260045260246000fd5b6020026020010151826127269190613af4565b91508061273281613b72565b9150506126ea565b506127108163ffffffff1611156127935760405162461bcd60e51b815260206004820152601e60248201527f6665652070657263656e746167657320657863656564206d6178696d756d00006044820152606401610544565b6001600160a01b038b1615612800578a6000808f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e8152602001908152602001600020600c0160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6001600160a01b038d166000908152602081815260408083208f84528252909120895161283592600d909201918b0190612dd5565b506001600160a01b038d166000908152602081815260408083208f84528252909120885161286b926007909201918a0190612e3a565b505050506001600160a01b03999099166000908152602081815260408083209a835299905297909720600181019490945550505090815560090180546001600160a01b03191633179055505050565b6001600160a01b038216600090815260208181526040808320848452909152812060020154806128ee5750506004546106f7565b90506106f7565b6001600160a01b038216600090815260208181526040808320848452909152812060050154806128ee5750506003546106f7565b6001600160a01b038083166000908152602081815260408083208584529091528120600b0154909116806128ee5750506001600160a01b03808316600090815260208181526040808320858452909152902060080154166106f7565b6000805b6001600160a01b0386166000908152602081815260408083208884529091529020600d0154811015612ab1576001600160a01b03861660009081526020818152604080832088845290915281206007018054612a28918691859081106129ff57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060088204015460079091166004026101000a900463ffffffff16612552565b9050612a348184613adc565b6001600160a01b0388166000908152602081815260408083208a84529091529020600d018054919450612a9e918991899186908110612a8357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316846117c2565b5080612aa981613b72565b915050612989565b50611912858585612ac28587613b5b565b6117c2565b612ad18282612044565b15612ae057610fec8282611ac3565b612aea8282611a31565b15610fec57610fec828261260e565b6001600160a01b038481166000908152602081815260408083208784529091528120600c01549091168015612b5b5734158015612b475750836001600160a01b0316816001600160a01b0316145b8015612b535750600083115b915050612b7e565b3415801590612b7157506001600160a01b038416155b8015612b53575082159150505b949350505050565b6001600160a01b0383166000908152602081815260408083208584529091528120600101548015801590612bc457508034101580612bc45750808310155b15612bd357600191505061176e565b6000612710612be287876128f5565b612bee90612710613adc565b6001600160a01b0388166000908152602081815260408083208a8452909152902060040154612c1d9190613b3c565b612c279190613b1c565b90508034101580612c385750808410155b9695505050505050565b6001600160a01b0383811660009081526020818152604080832086845290915290206008810154600490910154911690612c7d858585612c98565b6001600160a01b0382161561191257611912858584846117c2565b6001600160a01b038381166000908152602081815260408083208684529091529020600c0154168015612d74576040516323b872dd60e01b81526001600160a01b038216906323b872dd90612cf5903390309087906004016135f0565b602060405180830381600087803b158015612d0f57600080fd5b505af1158015612d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d479190613529565b506001600160a01b0384166000908152602081815260408083208684529091529020600401829055612d9d565b6001600160a01b0384166000908152602081815260408083208684529091529020346004909101555b50506001600160a01b039091166000908152602081815260408083209383529290522060080180546001600160a01b03191633179055565b828054828255906000526020600020908101928215612e2a579160200282015b82811115612e2a57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612df5565b50612e36929150612f40565b5090565b82805482825590600052602060002090600701600890048101928215612e2a5791602002820160005b83821115612ea757835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302612e63565b8015612ed75782816101000a81549063ffffffff0219169055600401602081600301049283019260010302612ea7565b5050612e36929150612f40565b828054828255906000526020600020908101928215612e2a579160200282015b82811115612e2a578251825591602001919060010190612f04565b5080546000825590600052602060002090810190612f3d9190612f40565b50565b5b80821115612e365760008155600101612f41565b80356001600160a01b0381168114612f6c57600080fd5b919050565b600082601f830112612f81578081fd5b81356020612f96612f9183613ab8565b613a87565b80838252828201915082860187848660051b8901011115612fb5578586fd5b855b85811015612fda57612fc882612f55565b84529284019290840190600101612fb7565b5090979650505050505050565b600082601f830112612ff7578081fd5b81356020613007612f9183613ab8565b80838252828201915082860187848660051b8901011115613026578586fd5b855b85811015612fda57813584529284019290840190600101613028565b600082601f830112613054578081fd5b81356020613064612f9183613ab8565b80838252828201915082860187848660051b8901011115613083578586fd5b855b85811015612fda57813563ffffffff811681146130a0578788fd5b84529284019290840190600101613085565b600080600080600080600060e0888a0312156130cc578283fd5b6130d588612f55565b9650602088013567ffffffffffffffff808211156130f1578485fd5b6130fd8b838c01612fe7565b975061310b60408b01612f55565b965060608a0135955061312060808b01612f55565b945060a08a0135915080821115613135578384fd5b6131418b838c01612f71565b935060c08a0135915080821115613156578283fd5b506131638a828b01613044565b91505092959891949750929550565b600080600080600080600060e0888a03121561318c578283fd5b61319588612f55565b9650602088013567ffffffffffffffff808211156131b1578485fd5b6131bd8b838c01612fe7565b97506131cb60408b01612f55565b965060608a0135955060808a0135945060a08a0135915080821115613135578384fd5b60008060008060008060008060006101208a8c03121561320c578182fd5b6132158a612f55565b985060208a013567ffffffffffffffff80821115613231578384fd5b61323d8d838e01612fe7565b995061324b60408d01612f55565b985060608c0135975060808c0135965060a08c0135955060c08c0135945060e08c013591508082111561327c578384fd5b6132888d838e01612f71565b93506101008c013591508082111561329e578283fd5b506132ab8c828d01613044565b9150509295985092959850929598565b600080604083850312156132cd578182fd5b6132d683612f55565b946020939093013593505050565b6000806000606084860312156132f8578283fd5b61330184612f55565b92506020840135915061331660408501612f55565b90509250925092565b60008060008060808587031215613334578081fd5b61333d85612f55565b93506020850135925061335260408601612f55565b9396929550929360600135925050565b600080600080600060a08688031215613379578283fd5b61338286612f55565b94506020860135935061339760408701612f55565b9250606086013591506133ac60808701612f55565b90509295509295909350565b600080600080600080600060e0888a0312156133d2578081fd5b6133db88612f55565b9650602088013595506133f060408901612f55565b94506060880135935061340560808901612f55565b925060a088013567ffffffffffffffff80821115613135578283fd5b600080600080600080600060e0888a03121561343b578081fd5b61344488612f55565b96506020880135955061345960408901612f55565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115613135578283fd5b60008060008060008060008060006101208a8c0312156134a1578283fd5b6134aa8a612f55565b985060208a013597506134bf60408b01612f55565b965060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a013567ffffffffffffffff8082111561327c578384fd5b60008060006060848603121561350b578081fd5b61351484612f55565b95602085013595506040909401359392505050565b60006020828403121561353a578081fd5b8151801515811461176e578182fd5b6000815180845260208085019450808401835b838110156135815781516001600160a01b03168752958201959082019060010161355c565b509495945050505050565b6000815180845260208085019450808401835b838110156135815781518752958201959082019060010161359f565b6000815180845260208085019450808401835b8381101561358157815163ffffffff16875295820195908201906001016135ce565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b038981168252602082018990528781166040830152868116606083015260808201869052841660a082015261010060c0820181905260009061368283820186613549565b905082810360e084015261369681856135bb565b9b9a5050505050505050505050565b600061014060018060a01b03808e1684528c6020850152808c166040850152808b166060850152508860808401528760a08401528660c08401528560e0840152806101008401526136f881840186613549565b905082810361012084015261370d81856135bb565b9d9c50505050505050505050505050565b6001600160a01b038a81168252602082018a90526101206040830181905260009161374b8483018c61358c565b9150808a16606085015280891660808501528760a085015280871660c08501525082810360e084015261377e8186613549565b905082810361010084015261379381856135bb565b9c9b505050505050505050505050565b6001600160a01b038c81168252602082018c9052610160604083018190526000916137d08483018e61358c565b9150808c166060850152808b166080850152508860a08401528760c08401528660e08401528561010084015282810361012084015261380f8186613549565b905082810361014084015261382481856135bb565b9e9d5050505050505050505050505050565b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b6020808252602e908201527f6f6e6c79207468652077686974656c69737465642062757965722063616e206260408201526d1a59081bdb881d1a1a5cc813919560921b606082015260800190565b6020808252818101527f5468652061756374696f6e2068617320612076616c696420626964206d616465604082015260600190565b602080825260119082015270050726963652063616e6e6f74206265203607c1b604082015260600190565b60208082526029908201527f6d69736d6174636865642066656520726563697069656e747320616e642070656040820152687263656e746167657360b81b606082015260800190565b60208082526051908201527f42696420696e6372656173652070657263656e74616765206d7573742062652060408201527f67726561746572207468616e206d696e696d756d207365747461626c6520696e6060820152706372656173652070657263656e7461676560781b608082015260a00190565b6020808252602a908201527f4d696e2070726963652063616e6e6f742065786365656420383025206f66206260408201526975794e6f77507269636560b01b606082015260800190565b60208082526034908201527f4e756d626572206f66204e465473206e6f74206170706c696361626c6520666f60408201527339103130ba31b41039b0b63297b0bab1ba34b7b760611b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff81118282101715613ab057613ab0613ba3565b604052919050565b600067ffffffffffffffff821115613ad257613ad2613ba3565b5060051b60200190565b60008219821115613aef57613aef613b8d565b500190565b600063ffffffff808316818516808303821115613b1357613b13613b8d565b01949350505050565b600082613b3757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613b5657613b56613b8d565b500290565b600082821015613b6d57613b6d613b8d565b500390565b6000600019821415613b8657613b86613b8d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200ce769c544faba457f2fbeeb0b89708317af180dd3ad0aafcfc3aadfa3b3261164736f6c63430008040033",
  "devdoc": {
    "author": "Avo Labs GmbH",
    "kind": "dev",
    "methods": {},
    "title": "An Auction Contract for bidding and selling single and batched NFTs",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createDefaultNftAuction(address,uint256,address,uint256,uint256,address[],uint32[])": {
        "notice": "Create an auction that uses the default bid increase percentage & the default auction bid period."
      }
    },
    "notice": "This contract can be used for auctioning any NFTs, and accepts any ERC20 token as payment",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2261,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "nftContractAuctions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)2303_storage))"
      },
      {
        "astId": 2267,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "nftOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      },
      {
        "astId": 2271,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "failedTransferCredits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2305,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "defaultBidIncreasePercentage",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2307,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "defaultAuctionBidPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2309,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "minimumSettableIncreasePercentage",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2311,
        "contract": "contracts/NFTAuction.sol:NFTAuction",
        "label": "maximumMinPricePercentage",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint32)dyn_storage": {
        "base": "t_uint32",
        "encoding": "dynamic_array",
        "label": "uint32[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)2303_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTAuction.Auction))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Auction)2303_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(Auction)2303_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTAuction.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)2303_storage"
      },
      "t_struct(Auction)2303_storage": {
        "encoding": "inplace",
        "label": "struct NFTAuction.Auction",
        "members": [
          {
            "astId": 2273,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "minPrice",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2275,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "buyNowPrice",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2277,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "auctionBidPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2279,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "auctionEnd",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2281,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "nftHighestBid",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 2283,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "bidIncreasePercentage",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2286,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "batchTokenIds",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2289,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "feePercentages",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint32)dyn_storage"
          },
          {
            "astId": 2291,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "nftHighestBidder",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          },
          {
            "astId": 2293,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "nftSeller",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          },
          {
            "astId": 2295,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "whitelistedBuyer",
            "offset": 0,
            "slot": "10",
            "type": "t_address"
          },
          {
            "astId": 2297,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "nftRecipient",
            "offset": 0,
            "slot": "11",
            "type": "t_address"
          },
          {
            "astId": 2299,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "ERC20Token",
            "offset": 0,
            "slot": "12",
            "type": "t_address"
          },
          {
            "astId": 2302,
            "contract": "contracts/NFTAuction.sol:NFTAuction",
            "label": "feeRecipients",
            "offset": 0,
            "slot": "13",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}